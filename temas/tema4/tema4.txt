
Tema 4






L√≥gica Computacional

Estrategias de deducci√≥n
para la l√≥gica proposicional
 











√çndice
Esquema	3
Ideas clave	4
4.1.	Introducci√≥n y objetivos	4
4.2.	El razonamiento natural	4
4.3.	Leyes y reglas	5
4.4.	Deducci√≥n axiom√°tica y deducci√≥n natural	5
4.5.	El c√°lculo de la deducci√≥n natural	7
4.6.	Reglas primitivas del c√°lculo proposicional	10
A fondo	11
Actividades	12
Test	13
 
¬© Universidad Internacional de La Rioja (UNIR)













 	 

 


Ideas clave

4.1.	Introducci√≥n y objetivos



En este tema se realiza una presentaci√≥n general de la deducci√≥n en el marco de la l√≥gica proposicional.



4.2.	El razonamiento natural

Cuando los humanos razonamos, pretendemos extraer una conclusi√≥n C a partir de un conjunto de premisas P.

Esta pretensi√≥n puede ser m√°s o menos afortunada, debido a que podemos estar m√°s o menos acertados en dicha extracci√≥n. Por otra parte, si el razonamiento buscado es de tipo deductivo, intentaremos que la conclusi√≥n se siga necesariamente de las premisas, es decir, si las premisas son verdaderas, la conclusi√≥n ser√° inevitablemente falsa.

Ahora bien, aun pretendiendo ser deductivos, los humanos podemos cometer errores en nuestro razonamiento. Podremos creer v√°lidos razonamientos que no lo son. Por este motivo necesitamos un procedimiento para evaluar si determinado razonamiento es v√°lido. Las deducciones desempe√±an esta labor.







L√≥gica Computacional Tema 4. Ideas clave
 
Si somos capaces de obtener una deducci√≥n de un razonamiento, tendremos la certeza de que la conclusi√≥n del mismo se sigue necesariamente de sus premisas y que, por consiguiente, el razonamiento es v√°lido.

No se puede decir lo mismo en el caso contrario. Si no somos capaces de obtener una deducci√≥n de un razonamiento, no significa que el razonamiento sea no v√°lido. El no obtener la deducci√≥n puede ser fruto de nuestra torpeza, nuestra falta de destreza en materias formales o simplemente nuestra falta de inspiraci√≥n en un momento dado.



4.3.	Leyes y reglas


UNA DEDUCCI√ìN CONSTA DE TRES COMPONENTES

Un conjunto (eventualmente vac√≠o) de premisas de un argumento.	

La conclusi√≥n de dicho argumento.	Una cadena de enunciados establecidos a modo de pasos intermedios entre las premisas y la conclusi√≥n.
Figura 1. Componentes de una deducci√≥n.


Estos pasos intermedios no se pueden establecer de forma err√°tica o arbitraria, sino que deben realizarse de acuerdo a las reglas del sistema. En nuestro caso las hemos denominado reglas b√°sicas y derivadas.



4.4.	Deducci√≥n axiom√°tica y deducci√≥n natural

Existen tradicionalmente dos procedimientos para demostrar la validez de un argumento deductivo.




L√≥gica Computacional Tema 4. Ideas clave
 
Deducci√≥n axiom√°tica

El primer procedimiento se basa en la presentaci√≥n previa de un sistema axiom√°tico y, mediante el uso de reglas de inferencia, obtener el esquema del razonamiento a partir de los axiomas. El siguiente esquema intenta aclarar lo dicho:

Figura 2. Deducci√≥n axiom√°tica.


Deducci√≥n natural

El segundo es el de la deducci√≥n natural. Este procedimiento es el que utilizaremos para realizar las pr√°cticas de este tema y se basa en la presentaci√≥n previa de un sistema de deducci√≥n natural.

Para deducir (demostrar la validez de un argumento), partiremos de las premisas del argumento y trataremos de llegar a la conclusi√≥n aplicando las reglas de inferencia del sistema.








L√≥gica Computacional Tema 4. Ideas clave
 
El esquema es el siguiente:



Figura 3. Deducci√≥n natural.



4.5.	El c√°lculo de la deducci√≥n natural

El sistema formal o c√°lculo de deducci√≥n natural de proposiciones, presentado en temas anteriores, nos servir√° ahora para realizar las deducciones.

Como se ha dicho, deducir es llegar a una conclusi√≥n de un razonamiento partiendo de sus premisas mediante el uso de las reglas de transformaci√≥n del mecanismo deductivo del sistema.












L√≥gica Computacional Tema 4. Ideas clave
 
 



Figura 4. Reglas b√°sicas y derivadas.


Existe una regla b√°sica de introducci√≥n y otra de eliminaci√≥n para cada una de los operadores l√≥gicos del sistema. El procedimiento de deducci√≥n no es algor√≠tmico, por lo tanto, no existen una serie de pasos definidos que nos permitan realizar las deducciones.

Lo que s√≠ se puede determinar son una serie de normas generales que nos pueden facilitar la labor, pero sin que tengamos asegurado nuestro objetivo al seguirlas. Las normas son las siguientes:

ÔÇÑ Separar las premisas de la conclusi√≥n.
ÔÇÑ Analizar la conclusi√≥n:
‚Ä¢	Si la conclusi√≥n es una de las premisas resultar√° f√°cil deducir. Sin embargo, este caso trivial no sucede habitualmente.
‚Ä¢	Si la conclusi√≥n es una parte de una de las premisas, debemos observar d√≥nde est√° para ver si se puede obtener f√°cilmente o no. Por ejemplo, ser√° f√°cil de obtener si est√°:
ÔÉ∫	Doblemente negada: en este caso aplicaremos la regla de eliminaci√≥n de la negaci√≥n y obtendremos la conclusi√≥n.
ÔÉ∫	En una de las partes de una conjunci√≥n: en este caso aplicaremos la regla de eliminaci√≥n de la conjunci√≥n y obtendremos la conclusi√≥n.
ÔÉ∫	En el consecuente de un condicional: en este caso tendremos que buscar si existe el antecedente en alg√∫n lugar de las premisas. Si lo obtuvi√©semos podr√≠amos aplicar la eliminaci√≥n del condicional y obtendr√≠amos la conclusi√≥n.




L√≥gica Computacional Tema 4. Ideas clave
 
‚Ä¢	Si no se dan los casos anteriores y la conclusi√≥n tiene operadores, trataremos de componer tal conclusi√≥n introduciendo dichos operadores mediante las reglas de introducci√≥n. Por ejemplo:
ÔÉ∫	Si el operador principal es una negaci√≥n supondremos la conclusi√≥n sin negar y trataremos de llegar a una contradicci√≥n, tal y como indica la regla de introducci√≥n de la negaci√≥n.
ÔÉ∫	Si el operador principal es una conjunci√≥n tendremos que obtener cada una de las subf√≥rmulas que une dicha conjunci√≥n, como indica la regla de introducci√≥n de la conjunci√≥n.
ÔÉ∫	Si el operador principal es una disyunci√≥n bastar√° con obtener una de las partes de esa disyunci√≥n, ya que al aplicar la regla de introducci√≥n de la disyunci√≥n obtendremos la f√≥rmula completa.
ÔÉ∫	Si el operador principal es un condicional supondremos el antecedente y trataremos de llegar al consecuente, tal y como indica la regla de introducci√≥n del condicional.
‚Ä¢	Si no se dan los casos anteriores y la conclusi√≥n no tiene operadores, debemos proceder por reducci√≥n al absurdo. La reducci√≥n al absurdo es una estrategia de deducci√≥n que es √∫til en este caso, pero es importante indicar que cualquier razonamiento se puede deducir mediante reducci√≥n al absurdo.

Reducci√≥n al absurdo: consiste en suponer la negaci√≥n de la conclusi√≥n y tratar de llegar a una contradicci√≥n.

Si lo conseguimos podremos introducir una negaci√≥n sobre la f√≥rmula supuesta (que no olvidemos que es la negaci√≥n de la conclusi√≥n) por aplicaci√≥n de la regla de introducci√≥n de la negaci√≥n. La f√≥rmula resultante es la conclusi√≥n doblemente negada. Si aplicamos la regla de eliminaci√≥n de la negaci√≥n, obtendremos la conclusi√≥n sin negar.










L√≥gica Computacional Tema 4. Ideas clave
 
4.6.	Reglas primitivas del c√°lculo proposicional

Para refrescar la memoria, echa un vistazo a las reglas primitivas o b√°sicas del c√°lculo proposicional de deducci√≥n natural que hemos presentado en temas anteriores.


















































L√≥gica Computacional Tema 4. Ideas clave
 


A fondo


Ejercicio de deducci√≥n natural en l√≥gica proposicional

Este documento visual expone con claridad la deducci√≥n natural desde una serie de ejemplos de razonamiento.



Accede al v√≠deo a trav√©s del aula virtual o desde la siguiente direcci√≥n web: https://youtu.be/d-9vhwLR6fY
 


Inferencia l√≥gica

En este v√≠deo se explica c√≥mo realizar deducciones mediante el uso de reglas derivadas.



Accede al v√≠deo a trav√©s del aula virtual o desde la siguiente direcci√≥n web: https://youtu.be/k_u5fkzlUBk
 


L√≥gica Computacional Tema 4. A fondo
 


Actividades

Ejercicios de deducci√≥n

Deduce los siguientes argumentos utilizando √∫nicamente las reglas b√°sicas del c√°lculo de deducci√≥n natural de enunciados. Para la soluci√≥n de los ejercicios deben seguirse los pasos del ejemplo explicado en la sesi√≥n presencial correspondiente a este tema.

1	
     

   

   	
 
2	
     

           

       

       	
     
3	
           	
       
4
	
 
5
	
     
6
	
       
7

 	 	Este ejercicio no tiene premisas, solo tiene conclusi√≥n. Su resoluci√≥n es posible a pesar de esta peculiaridad.
8
	
 
9
	
     
10

   	

 


L√≥gica Computacional Tema 4. Actividades
 


Test

1.	¬øQu√© es una deducci√≥n?
A.	Un m√©todo para demostrar la verdad de un argumento.
B.	Un procedimiento para demostrar la verdad de las premisas de un argumento.
C.	Un m√©todo para demostrar la validez de un argumento.
D.	Un mecanismo para demostrar la verdad de la conclusi√≥n de un argumento.


2.	¬øDe qu√© partes consta una deducci√≥n?
A.	Premisas y conclusi√≥n.
B.	Premisas, conclusi√≥n y pasos intermedios establecidos arbitrariamente en funci√≥n de nuestro raciocinio.
C.	Premisas, conclusi√≥n y pasos intermedios establecidos por aplicaci√≥n de las reglas del c√°lculo l√≥gico.
D.	Conclusi√≥n solo.


3.	¬øQu√© es la reducci√≥n al absurdo?
A.	Una estrategia de deducci√≥n.
B.	Un procedimiento para demostrar la validez de un razonamiento.
C.	Un procedimiento para demostrar que la conclusi√≥n de un razonamiento se sigue necesariamente de las premisas.
D.	Una estrategia inductiva.


4.	Si pretendemos establecer una deducci√≥n de un razonamiento cuya conclusi√≥n es
ùëù ‚à® ùëû debemos:
A.	Suponer ùëù y llegar a una contradicci√≥n.
B.	Encontrar o bien ùëù, o bien ùëû (basta una de ellas).
C.	Encontrar ùëù y obligatoriamente tambi√©n ùëû.
D.	Suponer la ùëù y llegar a ùëû.





L√≥gica Computacional
Tema 4. Test
 
5.	Si pretendemos establecer una deducci√≥n de un razonamiento cuya conclusi√≥n es
ùëù ‚àß ùëû, debemos:
A.	Suponer ùëù y llegar a una contradicci√≥n.
B.	Encontrar o bien ùëù, o bien ùëû (basta una de ellas).
C.	Encontrar ùëù y obligatoriamente tambi√©n ùëû.
D.	Suponer la ùëù y llegar a ùëû.


6.	Si pretendemos establecer una deducci√≥n de un razonamiento cuya conclusi√≥n es
ùëù ‚Üí ùëû, debemos:
A.	Suponer ùëù y llegar a una contradicci√≥n.
B.	Encontrar o bien ùëù, o bien ùëû (basta una de ellas).
C.	Encontrar ùëù y obligatoriamente tambi√©n ùëû.
D.	Suponer la ùëù y llegar a ùëû.


7.	Si pretendemos establecer una deducci√≥n de un razonamiento cuya conclusi√≥n es
¬¨ùëù, debemos:
A.	Suponer ùëù y llegar a una contradicci√≥n.
B.	Encontrar o bien ùëù, o bien ùëû (basta una de ellas).
C.	Encontrar ùëù y obligatoriamente tambi√©n ùëû.
D.	Suponer la ùëù y llegar a ùëû.

8.	Las reglas derivadas:
A.	Son indemostrables.
B.	Son esquemas de razonamientos v√°lidos.
C.	Sirven para facilitar las deducciones complejas.
D.	Son como los axiomas de un sistema axiom√°tico.


9.	El procedimiento de reducci√≥n al absurdo consiste en:
A.	Introducir una negaci√≥n y despu√©s eliminarla.
B.	Llegar a cualquier conclusi√≥n.
C.	No llegar a ninguna conclusi√≥n.
D.	Suponer la negaci√≥n de lo que buscamos y llegar a una contradicci√≥n.

L√≥gica Computacional
Tema 4. Test
 
10.	Si un razonamiento es no v√°lido, ¬øse puede obtener una deducci√≥n de este?
A.	No, es imposible.
B.	S√≠, pero no servir√≠a de nada.
C.	Eso depender√° de nuestra destreza.
D.	Las respuestas B y C son correctas.


















































L√≥gica Computacional
Tema 4. Test
